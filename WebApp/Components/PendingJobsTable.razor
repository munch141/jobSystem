@using Microsoft.AspNetCore.SignalR.Client

@inject JobQueue JobQueue
@implements IDisposable

<p>Jobs on queue: @jobCount</p>

<table class="table">
    <thead>
        <tr>
            <th>Job</th>
            <th>Created at</th>
        </tr>
    </thead>

    <tbody>
        @for (int i = 0; i < jobs.Count; i++)
        {
            <tr>
                <td>@jobs[i].Name</td>
                <td>@jobs[i].CreatedAt.ToString("dd MMM yyyy")</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private long jobCount => jobs.Count;
    private List<Job> jobs = new List<Job>();

    protected override async Task OnInitializedAsync()
    {
        JobQueue.QueueUpdated += this.UpdateListAsync;

        this.jobs = await JobQueue.ListAsync();
    }

    public void Dispose()
    {
        JobQueue.QueueUpdated -= this.UpdateListAsync;
    }

    private async void UpdateListAsync(object? sender, EventArgs e)
    {
        this.jobs = await JobQueue.ListAsync();
        await InvokeAsync(StateHasChanged);
    }
}
