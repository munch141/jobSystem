@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using WebApp.Components

@inject JobQueue JobQueue
@inject IHostEnvironment HostEnvironment
@inject IJSRuntime JsRuntime
@implements IAsyncDisposable

<h1>Job scheduling</h1>

<AddJobButton />
<PendingJobsTable />

@code {
    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        this.hubConnection = new HubConnectionBuilder()
            .WithUrl(
                "https://webapp/jobStatusHub",
                conf => {
                    if (HostEnvironment.IsDevelopment()) {
                        conf.HttpMessageHandlerFactory = (_) => new HttpClientHandler
                        {
                            ServerCertificateCustomValidationCallback = HttpClientHandler.DangerousAcceptAnyServerCertificateValidator
                        };
                    }
                }
            )
            .Build();

        hubConnection.On<string, string>("JobStatusUpdate", async (jobId, status) =>
        {
            await this.JsRuntime.InvokeVoidAsync("console.log", $"Status update: {jobId} {status}");
        });

        await hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}
